services:

  discovery:
    image: discovery
    build:
      context: ./discovery
    ports:
      - "8761:8761"
    networks:
      - app-network

  order:
    image: order
    build:
      context: ./order
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka/
    ports:
      - 8081:8081
    depends_on:
      - discovery
      - elasticsearch
      - redis
    networks:
      - app-network

  product:
    image: product
    build:
      context: ./product
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka/
    ports:
      - 8082:8082
    depends_on:
      - discovery
      - redis
    networks:
      - app-network

#  client-service:
#    image: client-service
#    build:
#      context: ./client-service
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    ports:
#      - "8082:8082"
#    networks:
#      - app-network
#    depends_on:
#      - eureka-server

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - app-network

  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.0
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch
    networks:
      - app-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - order
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - app-network

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    ports:
      - "8080:8080"  # Porta para acessar a interface do Jenkins
      - "50000:50000"  # Porta para agentes do Jenkins
    networks:
      - app-network
    volumes:
      - jenkins_home:/var/jenkins_home  # Volume para persistir dados do Jenkins
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false  # Desativa o setup wizard inicial
    depends_on:
      - discovery
      - order

volumes:
  jenkins_home:

networks:
  app-network:
    driver: bridge
